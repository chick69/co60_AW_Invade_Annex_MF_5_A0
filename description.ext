
// --- MAG REPACK *---
#include "outlw_magRepack\MagRepack_config.hpp"
// -------------------

//------------------------- On Load

author = Rarek, AhoyWorld, Quiksilver Modif MF PROPHET;					// Visible when loading mission
onLoadName = "MF Invade & Annex 5.A0.12_7a";						// Visible when loading mission
OnLoadMission = "Welcome back to the home of Invade and Annex ... Join us on TeamSpeak at mercenaires-francais.fr or 91.121.110.172";
loadScreen = "media\images\loading.paa";				// Visible when loading mission
overviewPicture = "media\images\loading.paa";			// Visible when selecting mission	

onLoadIntro = "";										// Displays a message while the intro is loading.
onLoadIntroTime = 0;									// Time and date displayed while the intro loads. 1 visible, 0 hidden.
onLoadMissionTime = 0;									// Time and date displayed while the mission loads. 1 visible, 0 hidden.

class Header 
	{
		gameType = COOP;								// Unknown, COOP, DM, TDM, CTF, SC, CTI, RPG, Sandbox, Seize, Defend.
		minPlayers = 1;									// Min # of players the MISSION supports
		maxPlayers = 60;								// Max # of players the MISSION supports, not server slots. Make sure # is greater than server slots.
	}; 

//------------------------- Admin

enableDebugConsole = 1;									// 0 = disabled. 1 = admins, 2 = everybody. 0 is recommended in MP.
allowFunctionsLog = 0; 									// Log functions to .rpt. disabled with 0
onPauseScript = "scripts\onPause.sqf";

//------------------------- Misc

disableChannels[] = {6};								// 0 = Global, 1 = Side, 2 = Command, 3 = Group, 4 = Vehicle, 5 = Direct, 6 = System. Admin/server/BattlEye can still use Global. 
disabledAI = 1;											// No AI in playable units
aiKills = 0; 											// disable scorelist for AI players
enableItemsDropping = 0; 								// disabled with 0
joinUnassigned = 1;										// 0 = players forced into role on join
showUAVFeed = 1;										// Enables/Disables the UAV Feed. Zeus-related.

//------------------------- Respawn

Respawn = 3;											// 0 = none. 1 = bird. 2 = instant where died. 3 = base or respawn_west marker. 4 = respawn with team, or bird. 5 = into AI or bird.
RespawnDelay = 4;										// Delay prior to respawn, ensure longer than BTC revive delay.
RespawnDialog = 0;										// default = 1. show respawn timer and scoreboard when killed.

//------------------------- Garbage collector
							
wreckLimit = 3;											// Limit before removal is triggered
wreckRemovalMinTime = 120;								// Min time before removal
wreckRemovalMaxTime = 360;								// Max time before removal
corpseLimit = 5;										// Limit before removal is triggered		
corpseRemovalMinTime = 60;								// Min time before removal
corpseRemovalMaxTime = 120;								// Max time before removal

//------------------------- Includes / Functions
	

#include "scripts\vehicle\crew\common.hpp"  			// vehicle crew hud
#include "scripts\=BTC=_revive\=BTC=_respawn.h"			// BTC medic revive system 
#include "dialogs.hpp"									// Intro
#include "functions\CHVD\dialog.hpp"					// CHVD View Distance script

class CfgFunctions
	{
		#include "functions\cfgfunctions.hpp"			// Integrated I&A functions
		#include "FETT_ZeusShare\CfgFunctions.hpp"		

	};

class RscTitles
{
	#include "scripts\vehicle\crew\namesleft.hpp"	// Occupants HUD for vehicles
};

class faction {
	#include "scripts\misc\factionResistance.hpp"
};

//------------------------- Parameters

class Params 
	{
	class WestPlayable
	{
        //paramsArray[0]
		title=		"West side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	1; 
	};
	class EastPlayable
	{
        //paramsArray[1]
		title=		"East side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	0; 
	};
	class GuerPlayable
	{
        //paramsArray[2]
		title=		"Independent side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	0; 
	};
	class CivPlayable
	{
        //paramsArray[3]
		title=		"Civilian side playable :"; 
		texts[]=	{"No","Yes"};
		values[]= 	{0,1}; 
		default=	0; 
	};
  class paramclear4
	{//paramsArray[4]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };       	
	class WeaponsType
	{
        //paramsArray[5]
		title=		"Equipment availability :"; 
		texts[]=	{"No weapon at start and on class change, equipement is lost at respawn.","Standard role weapons at spawn, class change, and you respawn with your last equipement."};
		values[]= 	{0,1}; 
		default=	1; 
	};
    class ReviveSetup
	{
        //paramsArray[6]
		title=		"Respawn / Revive Options :"; 
		texts[]=	{"Game basic respawn (Revive Off)","VTS: Revive or Respawn : Everyone can revive","VTS: Revive or Respawn : Only medic can revive","VTS: Revive - No respawn : Everyone can revive","VTS: Revive - No respawn : Only medic can revive"};
		values[]= 	{0,1,2,3,4}; 
		default=	4; 
	};		
    class ReviveNb
	{
        //paramsArray[7]
		title=		"Number of Revives :"; 
		texts[]=	{"Infinite - Revive-Cadet","20 - Revive-Easy ","10 - Revive-Normal","6  - Revive-Hard","3  - Revive-Extreme","1  - Revive-Crazy","0  - No revive-Realistic"};
		values[]= 	{9999,20,10,6,3,1,0}; 
		default=	9999; 
	};
    class ReviveTimeout
	{
        //paramsArray[8]
		title=		"Revive time out (if Revive with lifes or Last stand is On) :"; 
		texts[]=	{"30s.","60s.","2m.","5m.","10m.","20m.","30m.","45m.","60m.","2H."};
		values[]= 	{30,60,120,300,600,1200,1800,2700,3600,7200}; 
		default=	1800; 
	};
	
	class ViewDist
	{
        //paramsArray[9]
		title=		"View distance:"; 
		texts[]=	{"1000m","1500m","2000m","2500m","3000m","3500m","4000m","4500m","5000m","6000m","7000m","8000m","10000m"};
		values[]=	{1000,1500,2000,2500,3000,3500,4000,4500,5000,6000,7000,8000,10000}; 
		default=	2500; 
	};
	class ShowGrass
	{//paramsArray[10]
		title= 		"Terrain LOD / Show grass :";
        texts[]= 	{"Full","Medium","Low - No grass"};
        values[]= 	{25,100,200};
        default=	25;
  };
	class NightMoon
	{//paramsArray[11]
		title= 		"Night light :";
        texts[]= 	{"Full moon","No moon"};
        values[]= 	{1,0};
        default=	1;
  };    
	class paramclear
	{//paramsArray[12]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };  
  class Westfriendly
	{//paramsArray[13]
		title= 		"West Side Friendly to :";
        texts[]= 	{"Nobody","East","Resistance","East & Resistance"};
        values[]= 	{0,01,02,012};
        default=	0;
  };
  class Eastfriendly
	{//paramsArray[14]
		title= 		"East Side Friendly to :";
        texts[]= 	{"Nobody","West","Resistance","West & Resistance"};
        values[]= 	{1,10,12,102};
        default=	12;
  };
  class Resistancefriendly
	{//paramsArray[15]
		title= 		"Resistance Side Friendly to :";
        texts[]= 	{"Nobody","West","East","West & East"};
        values[]= 	{2,20,21,201};
        default=	21;
  }; 
	class paramclear2
	{//paramsArray[16]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };
  class AllowClassChange
	{//paramsArray[17]
		title= 		"Allow Class switch at base :";
        texts[]= 	{"Yes, players can change their unit ability","No"};
        values[]= 	{1,0};
        default=	0;
  }; 
  class AllowGroupChange
	{//paramsArray[18]
		title= 		"Allow Squad managing :";
        texts[]= 	{"Yes, players can make/join squads with the communication menu or from the shop","No"};
        values[]= 	{1,0};
        default=	0;
  };
   class AllowGroupLeaderMarkers
	{//paramsArray[19]
		title= 		"Allow Group leader markers :";
        texts[]= 	{"Yes, leaders can see other leaders positions on map","No"};
        values[]= 	{1,0};
        default=	1;
  }; 
  class AllowTeleportToGroupLeader
  {//paramsArray[20]
		title= 		"Allow teleportation from Base to your squad :";
        texts[]= 	{"Yes, players can teleport to their squad from the base","No"};
        values[]= 	{1,0};
        default=	0;
  };
  class AllowPlayersName
	{//paramsArray[21]
		title= 		"Allow friendly player names :";
        texts[]= 	{"Yes, players recognize nearby friendly faces","No"};
        values[]= 	{1,0};
        default=	1;
  };   

  class AddonsSide
	{//paramsArray[22]
		title= 		"Game Addons read from :";
        texts[]= 	{"Game Master","Server"};
        values[]= 	{0,1};
        default=	1;
  };      
  class paramclear3
	{//paramsArray[23]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };  
  class aiautomanage
	{//paramsArray[24]
		title= 		"AI - Smart waypoints management :";
        texts[]= 	{"Yes, VTS will manage AIs with correct behaviors and parameters when required","No, AIs will handle themself"};
        values[]= 	{1,0};
        default=	1;
  };  
   class aiaimshaking
	{//paramsArray[25]
		title= "AI - Aiming precision :";
        texts[]= 	{"Full - Steady hands","High - Sharp hands","Medium - Trained hands","Low - Rookie shaky hands","Hollywood - Don't really try to hit you"};
        values[]= 	{100,95,90,85,50};
        default=	50;
  };
  class paramclear5
	{//paramsArray[26]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  };
  class shopstartbalance
	{//paramsArray[27]
		title= 		"Shops : Initial Teams Balance";
        texts[]= 	{"0 $","5 000 $","10 000 $","25 000 $","50 000 $","100 000 $","1 000 000 $","100 000 000 $"};
        values[]= 	{0,5000,10000,25000,50000,100000,1000000,100000000};
        default=	100000000;
  };
  class shopallunlocked
	{//paramsArray[28]
		title= 		"Shops : All items available";
        texts[]= 	{"No, the shops start empty","Yes, everything is in quantity in the shops"};
        values[]= 	{0,1};
        default=	0;
  };  
  class shopunlockmethod
	{//paramsArray[29]
		title= 		"Shops : Items unlock method";
        texts[]= 	{"By Game Master only","By Game Master and Players sales in the shops"};
        values[]= 	{0,1};
        default=	1;
  };
    class shopfreeloadouttype
	{//paramsArray[30]
		title= 		"Shops : Loadouts unlimited and free to buy";
        texts[]= 	{"None","All","Personal Loadouts","Allies Loadouts","Server Loadouts"};
        values[]= 	{-2,-1,0,1,2};
        default=	-2;
  };
      class shopnakedweapononly
	{//paramsArray[31]
		title= 		"Shops : Don't sell pre-equiped weapons";
        texts[]= 	{"Yes, shop will only sell weapons without attachment","No, shop will sell all weapons, including pre-equiped weapons"};
        values[]= 	{1,0};
        default=	1;
  };
  class paramclear6
	{//paramsArray[32]
		title= 		"";
        texts[]= 	{""};
        values[]= 	{""};
        default=	"";
  }; 
  class allow2ndgm
	{//paramsArray[33]
		title= 		"Enable Game Master assistant slot :";
        texts[]= 	{"False","True"};
        values[]= 	{0,1};
        default=	1;
  }; 
  class AllowMultipleGM
  {//paramsArray[34]
		title= 		"Lock Game Master slots after launch :";
        texts[]= 	{"No, anyone can switch to those slots during the mission","Yes, slots will be reserved to GMs"};
        values[]= 	{1,0};
        default=	1;
  };
  class everyoneisgm
	{//paramsArray[35]
		title= 		"Game Master interface for everyone :";
        texts[]= 	{"False","Everybody's kung-fu fighting"};
        values[]= 	{0,1};
        default=	0;
  };   
  
	class AO {
				title = "Enable Main AO?";
				values[] = {1,0};
				texts[] = {"Enabled","Disabled"};
				default = 1;
			};
		
		class DefendAO {
				title = "Enable Defend AO?";
				values[] = {1,0};
				texts[] = {"Active","Desactive"};
				default = 1;
			};

		class SideObjectives {
				title = "Enable Side Objectives?";
				values[] = {1,0};
				texts[] = {"Enabled","Disabled"};
				default = 1;
			};

		class AOReinforcementJet {
				title = "Enable AO Reinforcement Jet?";
				values[] = {1,0};
				texts[] = {"Enabled","Disabled"};
				default = 1;
			};
			
		class EnemyLeftThreshhold {
				title = "Enemy Left Threshold";
				values[] = {1,2,3,4,5,6,7,8,9,10};
				texts[] = {"1","2","3","4","5","6","7","8","9","10"};
				default = 10;
			};
	
		class RadioTowerMineFieldChance {
				title = "Chance for minefield to spawn around Radio Tower?";
				values[] = {0,1,2,3,4,5,6,7,8,9,10};
				texts[] = {"0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
				default = 10; // default 5
			};

		class ArtilleryTargetTickTimeMin {
				title = "MINIMUM Time between Priority Target actions";
				values[] = {30,60,120,180,240,300,600,900};
				texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
				default = 120; // 120 default
			};

		class ArtilleryTargetTickTimeMax {
				title = "MAXIMUM Time between Priority Target actions";
				values[] = {30,60,120,180,240,300,600,900};
				texts[] = {"30 seconds","1 minute","2 minutes","3 minutes","4 minutes","5 minutes","10 minutes","15 minutes"};
				default = 180; // 300 default
			};

		class ArtilleryTargetTickWarning {
				title = "Warnings from CROSSROAD regarding Priority Target actions?";
				values[] = {1,0};
				texts[] = {"Enabled","Disabled"};
				default = 1;
			};

		class AOSize {
				title = "Main AO Diameter";
				values[] = {200,300,400,500,600,700,800,900,1000};
				texts[] = {"200m","300m","400m","500m","600m","700m","800m","900m","1,000m"};
				default = 600;
			};

		class VehicleRespawnDistance {
				title = "Distance from players that vehicles won't respawn";
				values[] = {10,50,100,200,300,400,500,1000,2000,5000,10000};
				texts[] = {"10m","50m","100m","200m","300m","400m","500m","1km","2km","5km","10km"};
				default = 100;
			};

		class GroupPatrol {
				title = "Groups Patrolling AO";
				values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
				texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
				default = 10; // default 11... remember, more AI = less FPS
			};
	
		class SniperTeamsPatrol {
				title = "Sniper Teams Patrolling AO";
				values[] = {0,1,2,3};
				texts[] = {1,2,3,4};
				default = 2; // default 2
			};

		class StaticMG {
				title = "Static Weapons in the AO";
				values[] = {0,1,2,3};
				texts[] = {1,2,3,4};
				default = 3; // default 2
			};

		class Overwatch {
				title = "Overwatch teams in the AO";
				values[] = {0,1,2,3,4,5,6,7};
				texts[] = {1,2,3,4,5,6,7,8};
				default = 2; // default 6
			};	

		class VEHPatrol {
				title = "Vehicles Patrolling AO";
				values[] = {0,1,2,3,4,5,6};
				texts[] = {1,2,3,4,5,6,7};
				default = 5; // default 2
			};

		class AAPatrol {
				title = "AA Vehicles Patrolling AO";
				values[] = {0,1,2,3,4};
				texts[] = {1,2,3,4,5};
				default = 1; // default 2
			};
			
		class AirPatrol {
				title = "% Chance Of Air Vehicles Patrolling AO";
				values[] = {0,1,2,3,4,5,6,7,8,9,10};
				texts[] = {0,10,20,30,40,50,60,70,80,90,100};
				default = 5; // default 7
		};
		
		class EnemiesInBuildings {
			title = "AO NUMBER OF ENEMIES IN BUILDINGS";
			values[] = {0,5,10,15,20,25,30,35,40,45,50};
			texts[] = {"DISABLED","5","10","15","20","25","30","35","40","45","50"};
			default = 20;
		};
			
		
		class rThermal {
			title = "Specialise Thermal Optics";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 0;
		};
		
		class rLMG {
			title = "Specialise LMGs";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 0;
		};
		
		class rSOptics {
			title = "Specialise Sniper Optics";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 0;
		};
		
		class CasFixedWingSupport {
			title = "CAS SUPPORT";
			values[] = {0,1,2,3,4,5};
			texts[] = {"DISABLED","A-164 WIPEOUT (CAS)","A-143 BUZZARD (AA)","A-143 BUZZARD (CAS)","To-199 NEOPHRON (CAS)","RANDOM"};
			default = 5;
		};
		
		class CasATGM {
			title = "CAS Air-To-Ground Missiles";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 0;
		};
		
		class CasOnStart {
			title = "CAS at Mission Start";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 1;
		};
		
		class PilotRespawn {
			title = "Pilot Respawn";
			values[] = {0,1};
			texts[] = {"DISABLED","ENABLED"};
			default = 1;
		};

	class Fatigue {
		title = "Player Fatigue";
		values[] = {0,1};
		texts[] = {"DISABLED","ENABLED"};
		default = 0;
	};
	
	class HeliRope {
		title = "Fast Rope";
		values[] = {0,1};
		texts[] = {"Desactive","Active"};
		default = 0;
	};
	
	class HeliSling {
		title = "Vehicle Heli Sling";
		values[] = {0,1};
		texts[] = {"DISABLED","ENABLED"};
		default = 0;		// Has been somewhat fixed, give it a trial until BIS releases theirs
	};
	
	class HeliDrop {
		title = "Helicopter Supply Drop";
		values[] = {0,1};
		texts[] = {"DISABLED","ENABLED"};
		default = 1;
	};
	
	
	class UH80TurretControl {
		title = "UH-80 Pilot Turret Control";
		values[] = {0,1};
		texts[] = {"DISABLED","ENABLED"};
		default = 1;
	};
	
	class VehicleAmmoCargo {				// Can bobcats and ammo HEMTT rearm other vehicles?
		title = "Vehicle Ammo Cargo";
		values[] = {0,1};
		texts[] = {"DISABLED","ENABLED"};
		default = 0;
	};
	
};

//------------------------- Notifications

class CfgNotifications
{
	class Default
	{
		title = ""; 			// Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; 		// Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; 			// Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; 		// Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; 	// Icon and text color
		duration = 5; 			// How many seconds will the notification be displayed
		priority = 0; 			// Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; 		// Required difficulty settings. All listed difficulties has to be enabled
	};

	class NewMain
	{
		title = "NEW MAIN OBJECTIVE";
		description = "Take %1";
		iconPicture = "media\images\notificons\main_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class CompletedMain
	{
		title = "MAIN OBJECTIVE COMPLETE";
		description = "Taken %1";
		iconPicture = "media\images\notificons\main_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class NewMainDefend
	{
		title = "DEFEND MAIN OBJECTIVE";
		description = "Defend %1";
		iconPicture = "media\images\notificons\defendtarget.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class CompletedMainDefended
	{
		title = "MAIN OBJECTIVE DEFENDED";
		description = "Defended %1";
		iconPicture = "media\images\notificons\main_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class NewSub
	{
		title = "NEW SUB-OBJECTIVE";
		description = "%1";
		iconPicture = "media\images\notificons\sub_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class CompletedSub
	{
		title = "SUB-OBJECTIVE COMPLETE";
		description = "%1";
		iconPicture = "media\images\notificons\sub_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class NewSideMission
	{
		title = "NEW SIDE MISSION";
		iconPicture = "media\images\notificons\side_mission.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class NewSideMissionFileData
	{
		title = "NEW SIDE MISSION";
		iconPicture = "media\images\notificons\laptop.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class NewSideMissionFileDataComplete
	{
		title = "FILE DATA SAVED";
		description = "%1";
		iconPicture = "media\images\notificons\laptop.paa";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 6;
	};

	class NewSideMissionRadar
	{
		title = "NEW SIDE MISSION";
		iconPicture = "media\images\notificons\smdestroyradar.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class CompletedSideMission
	{
		title = "SIDE MISSION COMPLETE";
		iconPicture = "media\images\notificons\side_mission_completed.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class NewPriorityTarget
	{
		title = "NEW PRIORITY TARGET";
		iconPicture = "media\images\notificons\priority_target.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};

	class CompletedPriorityTarget
	{
		title = "PRIORITY TARGET DOWN";
		iconPicture = "media\images\notificons\priority_target_neutralised.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};

	class EnemyJetDown
	{
		title = "ENEMY CAS NEUTRALIZED";
		iconPicture = "media\images\notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class EnemyJet
	{
		title = "ENEMY CAS INBOUND";
		iconPicture = "media\images\notificons\enemyJetinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};

	class NewSideMissionJet
	{
		title = "NEW SIDE MISSION";
		iconPicture = "media\images\notificons\enemyJetinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};

	class Reward
	{
		title = "TEAM REWARD";
		description = "%1";
		iconPicture = "media\images\notificons\reward.paa";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 6;
	};

	class ScoreBonus
	{
		title = "SCORE BONUS";
		description = "%1";
		iconPicture = "media\images\notificons\score_bonus.paa";
		iconText = "+%2";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 5;
	};
};

/*
Authors: 

	Quiksilver & Rarek [AW]
	
	Invade & Annex 2.00 was developed by Rarek [ahoyworld.co.uk] with hundreds of hours of work, 
	The current iterations have been developed by Quiksilver with hundreds of hours of work.
	
	Contributors: BACONMOP [AW], Razgriz33 [AW], Jester [AW], Kamaradski [AW], David [AW], chucky [allFPS].
	
	www.ahoyworld.co.uk
	www.allfps.com.au
	
	Please be respectful and do not remove/alter credits.
	
File Reference: 

	https://community.bistudio.com/wiki/Description.ext
*/